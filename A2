#include <iostream>
#include <string.h>
using namespace std;

struct hash_value
{
    int key;
    int value;
};

class hashClass
{
public:
    hash_value h[10];

    hashClass()
    {
        for (int i = 0; i < 10; i++)
        {
            h[i].key = -1;
            h[i].value = -1;
        }
    }

    void insert();
    int search(int k);
    void delet(int k);
    void display();
};

void hashClass ::insert()
{
    char ans;
    int k, v, hi, count = 0, flag = 0, i;
    do
    {
        if (count >= 10)
        {
            cout << "\n Hash table is full";
            break;
        }
        cout << "\n Enter a key ";
        cin >> k;
        cout << "\n Enter a value ";
        cin >> v;

        hi = k % 10;

        if (h[hi].key == -1)
        {
            h[hi].key = k;
            h[hi].value = v;
        }
        else
        {
            for (i = hi + 1; i < 10; i++)
            {
                if (h[i].key == -1)
                {
                    h[i].key = k;
                    h[i].value = v;
                    flag = 1;
                    break;
                }
            }
            for (i = 0; i < hi && flag == 0; i++)
            {
                if (h[i].key == -1)
                {
                    h[i].key = k;
                    h[i].value = v;
                    break;
                }
            }
        }

        flag = 0;
        count++;
        cout << "\n......Do you want to insert more key  ";
        cin >> ans;

    } while (ans == 'y' || ans == 'Y');
}

void hashClass ::display()
{
    cout << "\n Displaying : ";
    cout << "\n h[i] \t\t h[i].key \t h[i].value ";
    cout << endl;
    for (int i = 0; i < 10; i++)
    {
        cout << "\n h[" << i << "] \t\t " << h[i].key << " \t\t " << h[i].value;
    }
}

int hashClass ::search(int k)
{
    int i;
    for (i = 0; i < 10; i++)
    {
        if (h[i].key == k)
        {
            cout << "\n \t" << h[i].key << "is found at " << i << "location with value " << h[i].value;
            return i;
        }
    }

    if (i == 10)
    {
        return -1;
    }
    return 0;
}

void hashClass ::delet(int k)
{
    int j = search(k);
    if (j == -1)
    {
        cout << "\n Key not found";
    }
    else
    {
        h[j].key = -1;
        h[j].value = -1;
        cout << "\n Key is deleted";
    }
}

int main()
{
    hashClass h;
    int key, n;
    while (1)
    {
        cout << endl;
        cout << "\n Enter a menu option";
        cout << "\n 1.insert ";
        cout << "\n 2.display ";
        cout << "\n 3.find ";
        cout << "\n 4.delete ";
        cout << "\n 5.exit ";
        cout << "\n Enter the choice ";
        cin >> n;
        cout << endl;
        switch (n)
        {
        case 1:
            h.insert();
            break;
        case 2:
            h.display();
            break;
        case 3:
            cout << "\n Enter a key to search ";
            cin >> key;
            h.search(key);
            break;
        case 4:
            cout << "\n Enter a key to delete ";
            cin >> key;
            h.delet(key);
            break;
        case 5:
            exit(0);
        default:
            cout << "\n unknown choice";
        }
    }
    return 0;
}
